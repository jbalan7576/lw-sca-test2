name: Lacework SCA/SAST Pull Request 

on: 
  pull_request: 
    branches: 
      - main  # Specify the target branch for the pull request trigger 
  push:

permissions: 
  security-events: write  # Grant permission to upload SARIF files for Code Scanning 
  contents: read  # Grant permission to read the contents of the repository 
  
jobs: 
  build: 
    runs-on: ubuntu-latest  # The job runs on the latest Ubuntu environment 

    steps: 
      # Step 1: Install the Lacework CLI and SCA component 
      - name: Install Lacework CLI 
        run: | 
          # Download and install the Lacework CLI using a shell script 
          curl https://raw.githubusercontent.com/lacework/go-sdk/main/cli/install.sh | bash 
          # Configure the Lacework CLI with account, API key, and secret from GitHub secrets 
          lacework configure -a ${{ secrets.LW_ACCOUNT }}.lacework.net -k ${{ secrets.LW_API_KEY }} -s ${{ secrets.LW_API_SECRET }} --noninteractive 
          # Install the Software Composition Analysis (SCA) component 
          lacework component install sca 

      # Step 2: Check out the source branch (head of the pull request) 
      - name: Checkout master branch 
        uses: actions/checkout@v4  # Use the checkout action to pull the source branch code 
        with: 
          ref: master  # Reference the source branch of the pull request 
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication 

      # Step 3: Run the Lacework SCA scan on the source branch and save the output 
      - name: Run Lacework SCA Scan on Source Branch 
      #   run: lacework sca scan ./ -f sarif -o /tmp/lacework-scan-master.json
        run: lacework sca scan ./ -f sarif -o lacework-scan-master.sarif
        # Scan the source branch code, output in SARIF format, and save to /tmp/lacework-scan-source.json 

   
      # Step 4: Upload the SARIF file for analysis or further use 
      - name: Upload SARIF File
        uses: actions/upload-artifact@v4  # Use the upload artifact action to save the SARIF file 
        with: 
          name: lacework-comparison-report  # Name of the uploaded artifact 
          path: /tmp/lacework-scan-master.json  # Path to the SARIF file

      # Step 4: Upload the SARIF file for analysis or further use 
      #- name: Upload SARIF File to Github Code Scanning
      #  uses: github/codeql-action/upload-sarif@v3  # Use the upload artifact action to save the SARIF file 
      #  with:
      #    # name: lacework-comparison-report  # Name of the uploaded artifact 
      #    # path: /tmp/lacework-scan-master.json  # Path to the SARIF file
      #   sarif_file: lacework-scan-master.sarif 